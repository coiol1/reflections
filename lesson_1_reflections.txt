How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Quickly finds differences.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Don't have to spend so much time to find what was changed, especially if there are multiple people working on the project.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Commits represent some logical stopping point
    Cons: Could forget to commit for a while and then go too long between commits

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is for coding, which often involves several files that are connected to each other.
    It's useful to be able to see how all of the files changed in such situations.
    Google Docs is usually meant for files that stand alone, so there's no need to have multiple files included in one version.

How can you use the commands git log and git diff to view the history of files?

    git log shows what commits have been done and at what times
    git diff shows what changed between two commits, and git diff --stat shows the number of lines changed

How might using version control make you more confident to make changes that
could break something?

    It's easy to go back to a previous version that worked, so any changes are only temporary and not destructive.

Now that you have your workspace set up, what do you want to try using Git for?

    Websites and also coding assignments
